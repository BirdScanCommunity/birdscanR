% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/computeMTR.R
\name{computeMTR}
\alias{computeMTR}
\title{computeMTR}
\usage{
computeMTR(
  echoes,
  classSelection,
  altitudeRange,
  altitudeBinSize,
  timeRange,
  timeBinDuration_sec,
  timeZone,
  sunriseSunset,
  sunOrCivil = "civil",
  protocolData = protocolData,
  blindTimes = blindTimes,
  blindTimeAsMtrZero = blindTimeAsMtrZero,
  propObsTimeCutoff = 0,
  computePerDayNight = FALSE,
  computeAltitudeDistribution = TRUE
)
}
\arguments{
\item{echoes}{dataframe with the echo data from the data list created by the function ‘extractDBData’ or a subset of it created by the function ‘filterEchoData’.}

\item{classSelection}{character string vector with all classes which should be used to calculate the MTR. The MTR and number of Echoes will be calculated for each class as well as for all classes together.}

\item{altitudeRange}{numeric vector of length 2 with the start and end of the altitude range in meter a.g.l.}

\item{altitudeBinSize}{numeric, size of the altitude bins in meter.}

\item{timeRange}{vector of length 2, with start and end of timerange as POSIXct}

\item{timeBinDuration_sec}{duration of timeBins in seconds (numeric). for values <= 0 a duration of 1 hour will be set}

\item{timeZone}{timezone in which the timebins should be created as string. e.g. "Etc/GMT0"}

\item{sunriseSunset}{dataframe with sunrise/sunset, civil dawn/dusk. computed with function 'twilight'}

\item{protocolData}{dataframe with the protocol data from the data list created by the function \code{extractDBData} or a subset of it created by the function \code{filterProtocolData}.}

\item{blindTimes}{dataframe containing the blind times created by the function \code{mergeVisibilityAndManualBlindTimes}.}

\item{propObsTimeCutoff}{numeric between 0 and 1. If the MTR is computed per day and night, time bins with a proportional observation time smaller than propObsTimeCutoff are ignored when combining the time bins. If the MTR is computed for each time bin, the parameter is ignored.}

\item{computePerDayNight}{logical, TRUE: MTR is computed per day and night FALSE: MTR is computed for each time bin}

\item{computeAltitudeDistribution}{logical, TRUE: compute the mean height and altitude distribution of MTR for the pre-defined quantiles 0.05, 0.25, 0.5, 0.75, 0.95}

\item{sunOrCivil="civil"}{sunrise/sunset or civil dawn/dusk used to split day and night. Supported values: "sun" or "civil", default: "civil"}

\item{blindTimeAsMtrZero=NULL}{character string vector with the blind time types which should be treated as observation time with MTR zero.}
}
\value{
mtr
}
\description{
Make the original function 'computeMTR' faster.
There are two options to compute MTR values.
The options are selected with the parameter ‘computePerDayNight’.
\itemize{
\item compute MTR for each time bin: This option computes the MTR for each time bin defined in the time bin dataframe. The time bins that were split due to sunrise/sunset during the time bin will be combined to one bin.
\item compute MTR per day/night: The time bins of each day and night will be combined and the mean MTR is computed for each day and night. Aside this, the spread (first and third Quartile) for each day and night is computed. The spread is dependent on the chosen time bin duration/amount of time bins.
}
}
\author{
Fabian Hertner, \email{fabian.hertner@swiss-birdradar.com}; with edits by Baptiste Schmid, \email{baptiste.schmid@vogelwarte.ch}, and Birgen Haest, \email{birgen.haest@vogelwarte.ch}
}
